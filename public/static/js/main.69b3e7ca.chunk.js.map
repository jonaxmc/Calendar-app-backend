{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","chekingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","fin","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","cheking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69b3e7ca.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n   \r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open Modal', \r\n    uiCloseModal: '[ui] Close Modal', \r\n\r\n    eventLogout: '[event] Logout event',\r\n    eventSetActive: '[event] Set Active',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authChekingFinish: '[auth] Finish cheking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = (events=[])=>{\r\n    \r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = (event)=>{\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n const eventUpdated = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDeleted = ()=>{\r\n    return async(dispatch, getState)=>{\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted())\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = ()=>{\r\n    return async(dispatch)=>{\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents( body.eventos);\r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (event)=>({\r\n    type: types.eventLoaded,\r\n    payload: event\r\n\r\n})\r\n\r\nexport const eventLogout=()=>({\r\n    type: types.eventLogout\r\n\r\n})\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        console.log('respuesta',resp)\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(chekingFinish())\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst chekingFinish = () => ({ type: types.authChekingFinish })\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState ={}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ()=>{\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n    \r\n}","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'jona@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Test',\r\n        rEmail: 'test@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire(\"Error\", \"Las contraseñas deben ser iguales\", \"error\")\r\n        }\r\n\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n\r\n    }\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = ()=>({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = ()=>({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\r\nconst fin = now.clone().add(1,'hours')\r\n\r\nconst initEvent ={\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: fin.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(fin.toDate())\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent)\r\n        }else{\r\n            setFormValues(initEvent)\r\n        }\r\n        \r\n    }, [activeEvent, setFormValues])\r\n    \r\n\r\n    const handleInputChange = ({target})=>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e)=>{\r\n        setDateStart(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start:e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e)=>{\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end:e\r\n        })\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault()\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n   \r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error','La fecha fin debe ser mayor a la fecha inicio','error')\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false)\r\n        }\r\n\r\n        if( activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues))\r\n\r\n        }\r\n\r\n\r\n        setTitleValid(true)\r\n        closeModal()\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent())\r\n        setFormValues(initEvent);\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n            <h1> {(activeEvent)? \"Editar evento\" : \"Nuevo evento\"} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate ={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = ()=>{\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={handleOnClick}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDeleted())\r\n\r\n    }\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#FE7220' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return { style }\r\n\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <CalendarModal />\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )\r\n            }\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n        component={(props)=>(\r\n            (!isAuthenticated)\r\n            ? (<Component {...props}/>)\r\n            : (<Redirect to=\"/\"/>)\r\n        )\r\n        }\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startCheking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { cheking, uid } = useSelector(state => state.auth)\r\n    // console.log(cheking, uid)\r\n\r\n    useEffect(() => {\r\n        dispatch(startCheking())\r\n    }, [dispatch]);\r\n\r\n    if (cheking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\r\n                        <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}/>\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    cheking: true\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                cheking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                cheking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                cheking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumple jefe2',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user:{\r\n//         _id: '123',\r\n//         name:'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState ={\r\n    events:[],\r\n    activeEvent: null\r\n\r\n}\r\n\r\nexport const calendarReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent:null\r\n            }\r\n        case types.eventUpdate:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n            case types.eventDeleted:\r\n                return{\r\n                    ...state,\r\n                    events: state.events.filter(\r\n                        e => (e.id !== state.activeEvent.id) \r\n                    ),\r\n                    activeEvent: null\r\n                }\r\n            case types.eventLoaded:\r\n                return{\r\n                    ...state,\r\n                    events:[...action.payload]\r\n                }\r\n\r\n            case types.eventLogout:\r\n                return{\r\n                    ...initialState\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen:false\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen:true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n\r\n        </Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n\n    <CalendarApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}